Index: mpich-3.3.1/src/binding/fortran/use_mpi_f08/mpi_f08_types.f90
===================================================================
--- mpich-3.3.1.orig/src/binding/fortran/use_mpi_f08/mpi_f08_types.f90
+++ mpich-3.3.1/src/binding/fortran/use_mpi_f08/mpi_f08_types.f90
@@ -248,10 +248,12 @@ interface MPI_Sizeof
     module procedure MPI_Sizeof_xint64
     module procedure MPI_Sizeof_xreal32
     module procedure MPI_Sizeof_xreal64
-    module procedure MPI_Sizeof_xreal128
     module procedure MPI_Sizeof_xcomplex32
     module procedure MPI_Sizeof_xcomplex64
+#if !defined(NO_REAL128)
+    module procedure MPI_Sizeof_xreal128
     module procedure MPI_Sizeof_xcomplex128
+#endif      
 end interface
 
 private :: MPI_Sizeof_character
@@ -263,10 +265,12 @@ private :: MPI_Sizeof_xint32
 private :: MPI_Sizeof_xint64
 private :: MPI_Sizeof_xreal32
 private :: MPI_Sizeof_xreal64
-private :: MPI_Sizeof_xreal128
 private :: MPI_Sizeof_xcomplex32
 private :: MPI_Sizeof_xcomplex64
+#if !defined(NO_REAL128)
 private :: MPI_Sizeof_xcomplex128
+private :: MPI_Sizeof_xreal128
+#endif      
 
 contains
 
@@ -350,6 +354,7 @@ subroutine MPI_Sizeof_xreal64 (x, size,
     ierror = 0
 end subroutine MPI_Sizeof_xreal64
 
+#if !defined(NO_REAL128)
 subroutine MPI_Sizeof_xreal128 (x, size, ierror)
     use,intrinsic :: iso_fortran_env, only: real128
     real(real128),dimension(..) :: x
@@ -359,7 +364,8 @@ subroutine MPI_Sizeof_xreal128 (x, size,
     size = storage_size(x)/8
     ierror = 0
 end subroutine MPI_Sizeof_xreal128
-
+#endif
+      
 subroutine MPI_Sizeof_xcomplex32 (x, size, ierror)
     use,intrinsic :: iso_fortran_env, only: real32
     complex(real32),dimension(..) :: x
@@ -380,6 +386,7 @@ subroutine MPI_Sizeof_xcomplex64 (x, siz
     ierror = 0
 end subroutine MPI_Sizeof_xcomplex64
 
+#if !defined(NO_REAL128)
 subroutine MPI_Sizeof_xcomplex128 (x, size, ierror)
     use,intrinsic :: iso_fortran_env, only: real128
     complex(real128),dimension(..) :: x
@@ -389,7 +396,8 @@ subroutine MPI_Sizeof_xcomplex128 (x, si
     size = storage_size(x)/8
     ierror = 0
 end subroutine MPI_Sizeof_xcomplex128
-
+#endif
+      
 subroutine MPI_Status_f2f08(f_status, f08_status, ierror)
     integer, intent(in) :: f_status(MPI_STATUS_SIZE)
     type(MPI_Status), intent(out) :: f08_status
